{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["images","App","items","name","src","description","className","Accordion","defaultActiveKey","map","item","i","Item","eventKey","Header","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAGMA,EACI,mBADJA,EAEE,mBAFFA,EAGG,mBAHHA,EAII,mBAJJA,EAKO,mBALPA,EAMI,mBANJA,EAOM,mBAPNA,EAQE,mBARFA,EASE,mBATFA,EAUM,oBAVNA,EAWI,oBAoRKC,MAjRf,WACE,IAAMC,EAAQ,CACZ,CACEC,KAAM,YACNC,IAAKJ,EACLK,YACE,mCACE,wGAIN,CACEF,KAAM,OACNC,IAAKJ,EACLK,YACE,mCACE,yPAQN,CACEF,KAAM,WACNC,IAAKJ,EACLK,YACE,mCACE,sGAIN,CACEF,KAAM,OACNC,IAAKJ,EACLK,YACE,mCACE,qIAON,CACEF,KAAM,SACNC,IAAKJ,EACLK,YACE,mCACE,oJAON,CACEF,KAAM,WACNC,IAAKJ,EACLK,YACE,mCACE,2OAON,CACEF,KAAM,OACNC,IAAKJ,EACLK,YACE,mCACE,yJAON,CACEF,KAAM,QACNC,IAAKJ,EACLK,YACE,mCACE,sGAIN,CACEF,KAAM,SACNC,IAAKJ,EACLK,YACE,mCACE,wGAIN,CACEF,KAAM,OACNC,IAAKJ,EACLK,YACE,mCACE,+IAON,CACEF,KAAM,SACNC,IAAKJ,EACLK,YACE,mCACE,2HAQR,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAACC,EAAA,EAAD,CAAWC,iBAAiB,GAA5B,SACGN,EAAMO,KAAI,SAACC,EAAMC,GAChB,OACE,eAACJ,EAAA,EAAUK,KAAX,CAAsCC,SAAQ,UAAKF,GAAnD,UACE,eAACJ,EAAA,EAAUO,OAAX,WACGJ,EAAKP,KACN,qBAAKG,UAAU,OAAf,SACE,qBAAKF,IAAKM,EAAKN,WAInB,cAACG,EAAA,EAAUQ,KAAX,UAAiBL,EAAKL,gBARxB,mBAAiCM,WAezC,qBAAKL,UAAU,aAAf,SAEE,qBAAKA,UAAU,MAAf,SACGJ,EAAMO,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAsBL,UAAU,6BAAhC,UACE,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,mBAAf,SAEE,qBAAKF,IAAKM,EAAKN,QAEjB,qBAAKE,UAAU,GAAf,SACE,8BAAMI,EAAKL,mBAGf,oBAAIC,UAAU,gBAVhB,cAAiBK,eC3JhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56cdd0c2.chunk.js","sourcesContent":["import './App.css'\nimport { Accordion } from 'react-bootstrap'\n\nconst images = {\n  carrot: 'assets/game1.jpg',\n  corn: 'assets/game2.jpg',\n  onion: 'assets/game3.jpg',\n  potato: 'assets/game4.jpg',\n  artichoke: 'assets/game5.jpg',\n  radish: 'assets/game6.jpg',\n  broccoli: 'assets/game7.jpg',\n  peas: 'assets/game8.jpg',\n  leek: 'assets/game9.jpg',\n  eggplant: 'assets/game11.jpg',\n  pepper: 'assets/game14.jpg',\n}\n\nfunction App() {\n  const items = [\n    {\n      name: 'Artichoke',\n      src: images.artichoke,\n      description: (\n        <>\n          <p>No puedes jugar una Alcachofa salvo que otra carta te mande hacerlo.</p>\n        </>\n      ),\n    },\n    {\n      name: 'Beet',\n      src: images.radish,\n      description: (\n        <>\n          <p>\n            Elige otro jugador. Cada uno elige una carte aleatoria de su mano. Si las dos cartas\n            son Alcacofas, compostar las dos. En otro caso, los jugadores intercambian las cartas.\n            Las cartas van a la mano de cada jugador.\n          </p>\n        </>\n      ),\n    },\n    {\n      name: 'Broccoli',\n      src: images.broccoli,\n      description: (\n        <>\n          <p>Compostar una Alcachofa si tu mano contiene 3 o más Alcachofas.</p>\n        </>\n      ),\n    },\n    {\n      name: 'Corn',\n      src: images.corn,\n      description: (\n        <>\n          <p>\n            Jugar esta carta con una Alcachofa. Coge una carta del huerto (centro) y ponla encima\n            de tu mazo.\n          </p>\n        </>\n      ),\n    },\n    {\n      name: 'Carrot',\n      src: images.carrot,\n      description: (\n        <>\n          <p>\n            Compostar 2 Alcachofa. Tienes que jugarla como primera acción y no puedes tomar otra\n            acción en este turno.\n          </p>\n        </>\n      ),\n    },\n    {\n      name: 'Eggplant',\n      src: images.eggplant,\n      description: (\n        <>\n          <p>\n            Compostar una Alcachofa, y tambien esta carta. A continuación todos los jugadores\n            tienen que pasar dos cartas al jugador a su izquierda. Si no tienes dos cartas, pasas todas las cartas que tienes.\n          </p>\n        </>\n      ),\n    },\n    {\n      name: 'Leek',\n      src: images.leek,\n      description: (\n        <>\n          <p>\n            Elige un jugador y revela la primera carta de su mazo. Coge la carta a tu mano o\n            ponla al descarte del mismo jugador.\n          </p>\n        </>\n      ),\n    },\n    {\n      name: 'Onion',\n      src: images.onion,\n      description: (\n        <>\n          <p>Compost 1 Alcachofa, pon esta cebolla al descarte de otro jugador.</p>\n        </>\n      ),\n    },\n    {\n      name: 'Pepper',\n      src: images.pepper,\n      description: (\n        <>\n          <p>Elige la carta que quieras de tu descarte y ponla encima de tu mazo.</p>\n        </>\n      ),\n    },\n    {\n      name: 'Peas',\n      src: images.peas,\n      description: (\n        <>\n          <p>\n            Revela dos cartas del mazo común. Coge una a tu descarte y pon la otra sobre el\n            descarte de otro jugador\n          </p>\n        </>\n      ),\n    },\n    {\n      name: 'Potato',\n      src: images.potato,\n      description: (\n        <>\n          <p>\n            Revela la primera carta de tu mazo. Si es una Alcachofa, compostarla. Si no, descarta.\n          </p>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-none d-md-none\">\n        <Accordion defaultActiveKey=\"\">\n          {items.map((item, i) => {\n            return (\n              <Accordion.Item key={`acc-item-${i}`} eventKey={`${i}`}>\n                <Accordion.Header>\n                  {item.name}\n                  <div className=\"mx-4\">\n                    <img src={item.src} />\n                  </div>\n                </Accordion.Header>\n\n                <Accordion.Body>{item.description}</Accordion.Body>\n              </Accordion.Item>\n            )\n          })}\n        </Accordion>\n      </div>\n\n      <div className=\"d-md-block\">\n        {/* <h2>Card Powers</h2> */}\n        <div className=\"row\">\n          {items.map((item, i) => {\n            return (\n              <div key={`veg-${i}`} className=\"col-3 col-md-3 border mb-3\">\n                <div className=\"d-flex flex-column align-items-center\">\n                  <div className=\"text-center py-3\">\n                    {/* <h4>{item.name}</h4> */}\n                    <img src={item.src} />\n                  </div>\n                  <div className=\"\">\n                    <div>{item.description}</div>\n                  </div>\n                </div>\n                <hr className=\"d-md-none\" />\n              </div>\n            )\n          })}\n          {/* <li className=\"col-4\">\n            <img src={images.artichoke} class=\"floatl\" />\n\n            <h4>Artichoke</h4>\n\n            <p>No puedes jugar una Alcachofa salvo que otra carta te mande hacerlo.</p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.radish} class=\"floatl\" />\n\n            <h4>Beet</h4>\n\n            <p>\n              Elige otro jugador. Cada uno elige una carte aleatoria de su mano. Si las dos cartas\n              son Art., compost las dos. En otro caso, los jugadores intercambian las cartas y van\n              a la mano de cada jugador.\n            </p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.broccoli} class=\"floatl\" />\n\n            <h4>Broccoli</h4>\n\n            <p>Compostar una Alcachofa si tu mano contiene 3 o más Alcachofas.</p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.corn} class=\"floatl\" />\n\n            <h4>Corn</h4>\n\n            <p>\n              Jugar esta carta con una Alcachofa. Coge una carta del centro y ponla encima de tu\n              mazo\n            </p>\n\n            <p>If you have no Artichokes in your hand, you cannot play this card.</p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.carrot} class=\"floatl\" />\n\n            <h4>Carrot</h4>\n\n            <p>\n              Compostar 2 Alcachofa. Tienes que jugarla como primera acción y no puedes tomar otra\n              acción en este turno.\n            </p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.eggplant} class=\"floatl\" />\n\n            <h4>Eggplant</h4>\n\n            <p>\n              Compostar una Alcachofa, y tambien esta carta. A continuación todos los jugadores\n              tienen que pasar dos cartas al jugador a su izquierda.\n            </p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.leek} class=\"floatl\" />\n\n            <h4>Leek</h4>\n\n            <p>\n              Elige un jugador y revela la primera carta de su mazo. Coge la carta a tu mano o\n              devuélvela al descarte del mismo jugador.\n            </p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.onion} class=\"floatl\" />\n\n            <h4>Onion</h4>\n\n            <p>Compost 1 Alcachofa, pon esta cebolla al descarte de otro jugador.</p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.pepper} class=\"floatl\" />\n\n            <h4>Pepper</h4>\n\n            <p>Elige la carta que quieras de tu descarte y ponla encima de tu mazo.</p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.peas} class=\"floatl\" />\n\n            <h4>Peas</h4>\n\n            <p>Reveal the top two cards from the Garden Stack.</p>\n\n            <p>\n              Put one on top of your Discard Pile, the other on top of an opponent's Discard Pile.\n            </p>\n\n            <p>If there are no cards left in the Garden Stack, you cannot play this card.</p>\n          </li>\n          <li className=\"col-4\">\n            <img src={images.potato} class=\"floatl\" />\n            <h4>Potato</h4>\n\n            <p>\n              Revela la primera carta de tu mazo. Si es una Alcachofa, compostarla. Si no,\n              descarta.\n            </p>\n          </li> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}